<%- include("./modal/user_modal.ejs") %>
<div class="container mb-3">
  <table id="employees" class="display" style="width: 100%">
    <thead>
      <tr>
        <th>Çalışan ID</th>
        <th>TC No</th>
        <th>Ad-Soyad</th>
        <th>Email</th>
        <th>Telefon</th>
        <th>Profil Fotoğrafı</th>
        <th>Güncellendiği Tarih</th>
        <th>İşlem</th>
      </tr>
    </thead>
    <tbody></tbody>
    <tfoot>
      <tr>
        <th>Çalışan ID</th>
        <th>TC No</th>
        <th>Ad-Soyad</th>
        <th>Email</th>
        <th>Telefon</th>
        <th>Profil Fotoğrafı</th>
        <th>Güncellendiği Tarih</th>
        <th>İşlem</th>
      </tr>
    </tfoot>
  </table>
</div>

<script>
  function ellipsis(text, maxLength) {
    if (text.length > maxLength) {
      return text.substring(0, maxLength) + "...";
    }
    return text;
  }
  function loadRoles() {
    $.ajax({
      url: "/admin/api/roller",
      method: "GET",
      success: function (roles) {
        const userRoleSelect = $("#user_role");
        userRoleSelect.empty();
        userRoleSelect.append('<option value="">Yetki Seçin</option>');
        roles.forEach((role) => {
          userRoleSelect.append(
            `<option value="${role.role_id}">${role.role_name}</option>`
          );
        });
      },
      error: function (err) {
        console.error("Roller alınırken bir hata oluştu.", err);
      },
    });
  }
  $("#profileModal").on("show.bs.modal", function () {
    loadRoles();
  });
  function edit(apiUrl, userId) {
    $.ajax({
      url: apiUrl, // API URL'sini güncelle
      method: "GET",
      success: function (data) {
        console.log(data);
        // Modal alanlarını doldur
        $("#first_name").val(data.first_name).attr("readonly", true);
        $("#last_name").val(data.last_name).attr("readonly", true);
        $("#email").val(data.email).attr("readonly", true);
        $("#phone_number").val(data.phone_number).attr("readonly", true);
        $("#user_role").val(data.role_id);
        $("#profile_image").attr(
          "src",
          "../../" + data.profile_image || "default.jpg"
        );

        $("#profileModal").modal("show");
      },
      error: function (err) {
        console.error("Kullanıcı bilgileri alınırken bir hata oluştu.", err);
      },
    });
  }

  $(document).ready(function () {
    var table = $("#employees").DataTable({
      ajax: {
        url: "/admin/api/calisanlar/user",
        dataSrc: "",
      },
      columns: [
        { data: "employee_id" },
        { data: "tc_no" },
        {
          data: "first_name",
          render: function (data, type, row) {
            return `${row.first_name} ${row.last_name}`;
          },
        },
        { data: "email" },
        { data: "phone_number" },
        {
          data: "profile_image",
          render: function (data, type, row) {
            return `<span class="ellipsis">${ellipsis(data, 200)}</span>`;
          },
        },
        {
          data: "updated_at",
          render: function (data) {
            return data ? moment(data).format("DD/MM/YYYY") : "N/A";
          },
        },
        {
          data: "employee_id",
          render: function (data, type, row) {
            return `<a href="#" class="btn btn-warning btn-sm" onclick="edit('/admin/api/calisanlar/user_modal/${data}', '${data}')">
                    <ion-icon name="create-outline" data-toggle="tooltip" title="DÜZENLE"></ion-icon></a>
                    <a href="#" class="btn btn-danger btn-sm"  onclick="confirmDelete('/admin/api/calisanlar/user/${data}', ${data},'#employees')">
                    <ion-icon name="trash" data-toggle="tooltip" title="SİL"></ion-icon></a>`;
          },
        },
      ],
      lengthMenu: [
        [10, 25, 50, -1],
        [10, 25, 50, "All"],
      ],
      dom: "Blfrtip", // Butonlar ve filtreler için yapılandırma
      buttons: [
        {
          extend: "colvis",
          text: '<i class="fa fa-eye" data-toggle="tooltip" title="Kolonları Göster/Gizle"></i>',
        },
        {
          extend: "excelHtml5",
          text: '<i class="fa fa-file-excel-o" data-toggle="tooltip" data-original-title="Excel\'e Aktar"></i>',
          title: "Çalışanlar " + moment(new Date()).format("DD-MM-YYYY"),
          exportOptions: {
            columns: ":visible",
          },
        },
        {
          extend: "print",
          text: '<i class="fa fa-print" data-toggle="tooltip" data-original-title="Yazdır"></i>',
          title: "Çalışanlar " + moment(new Date()).format("DD-MM-YYYY"),
          exportOptions: {
            columns: ":visible",
          },
        },
      ],
      fixedColumns: {
        leftColumns: 1,
      },
      fixedHeader: true,
      scrollCollapse: true,
      scrollX: true,
      language: {
        lengthMenu: " _MENU_ Sayfa başı kayıt Sayısı",
        zeroRecords: "Kayıt bulunamadı",
        info: "_TOTAL_ kayıttan _START_ - _END_ arası gösteriliyor",
        infoEmpty: "Kayıt yok",
        infoFiltered: "(toplam _MAX_ kayıttan filtrelendi)",
        searching: true,
        search: "Ara:",
        paginate: {
          first: "İlk",
          last: "Son",
          next: "Sonraki",
          previous: "Önceki",
        },
      },
      initComplete: function () {
        this.api()
          .columns()
          .every(function () {
            let column = this;
            let title = column.footer().textContent;

            let input = document.createElement("input");
            input.placeholder = title;
            column.footer().replaceChildren(input);

            input.addEventListener("keyup", () => {
              if (column.search() !== this.value) {
                column.search(input.value).draw();
              }
            });
          });
      },
    });

    $('[data-toggle="tooltip"]').tooltip();
  });
</script>
