<div class="tab-content" id="nav-tabContent">
  <table id="job-info" class="display" style="width: 100%">
    <thead>
      <tr>
        <th>Çalışan ID</th>
        <th>Ad-Soyad</th>
        <th>Çalıştığı Bölüm</th>
        <th>Çalıştığı Birim</th>
        <th>Çalışan Türü</th>
        <th>Unvanı</th>
        <th>Görev</th>
        <th>Yaptığı İş</th>
        <th>İşe Giriş Tarihi</th>
        <th>Çıkış Tarihi</th>
        <th>Grup</th>
        <th>İşlemler</th>
      </tr>
    </thead>
    <tbody></tbody>
    <tfoot>
      <tr>
        <th>Çalışan ID</th>
        <th>Ad-Soyad</th>
        <th>Çalıştığı Bölüm</th>
        <th>Çalıştığı Birim</th>
        <th>Çalışan Türü</th>
        <th>Unvanı</th>
        <th>Görev</th>
        <th>Yaptığı İş</th>
        <th>İşe Giriş Tarihi</th>
        <th>Çıkış Tarihi</th>
        <th>Grup</th>
        <th>İşlemler</th>
      </tr>
    </tfoot>
  </table>
</div>
<script>
  $(document).ready(function () {
    var table = $("#job-info").DataTable({
      ajax: {
        url: "/admin/calisanlar/job/data",
        dataSrc: "",
      },
      columns: [
        { data: "employee_id" },
        {
          data: "first_name",
          render: function (data, type, row) {
            return `${row.first_name} ${row.last_name}`;
          },
        },
        { data: "department" },
        { data: "division" },
        { data: "employee_type" },
        { data: "title" },
        { data: "task" },
        {
          data: "job_description",
          render: function (data) {
            return `<span class="ellipsis">${ellipsis(data, 100)}</span>`;
          },
        },
        {
          data: "employment_start_date",
          render: function (data) {
            return moment(data).format("DD/MM/YYYY");
          },
        },
        {
          data: "termination_date",
          render: function (data) {
            return data ? moment(data).format("DD/MM/YYYY") : "N/A";
          },
        },
        {
          data: "group_name",
          render: function (data) {
            return data ? data : "-";
          },
        },
        {
          data: "employee_id",
          render: function (data, type, row) {
            return `<a href="/edit/${data}" class="btn btn-warning btn-sm">
                    <ion-icon name="create-outline"></ion-icon>
                    <a href="/delete/${data}" class="btn btn-danger btn-sm" onclick="return confirm('Silmek istediğinize emin misiniz?')">
                    <ion-icon name="trash"></ion-icon></a>`;
          },
        },
      ],
      dom: "Blfrtip", // Butonlar ve filtreler için yapılandırma
      buttons: [
        {
          extend: "colvis",
          text: '<i class="fa fa-eye" data-toggle="tooltip" title="Kolonları Göster/Gizle"></i>',
        },
        {
          extend: "excelHtml5",
          text: '<i class="fa fa-file-excel-o" data-toggle="tooltip" data-original-title="Excel\'e Aktar"></i>',
          title: "Çalışanlar " + moment(new Date()).format("DD-MM-YYYY"),
          exportOptions: {
            columns: ":visible",
          },
        },
        {
          extend: "print",
          text: '<i class="fa fa-print" data-toggle="tooltip" data-original-title="Yazdır"></i>',
          title: "Çalışanlar " + moment(new Date()).format("DD-MM-YYYY"),
          exportOptions: {
            columns: ":visible",
          },
        },
      ],
      fixedColumns: {
        leftColumns: 1,
      },
      fixedHeader: true,
      scrollCollapse: true,
      scrollY: "100vh",
      scrollX: true,
      //sayfalama kısmındaki menü kısmını düzenlmeye yarar.
      lengthMenu: [
        [10, 25, 50, -1],
        [10, 25, 50, "All"],
      ],
      language: {
        lengthMenu: " _MENU_ Sayfa başı kayıt Sayısı",
        zeroRecords: "Kayıt bulunamadı",
        info: "_TOTAL_ kayıttan _START_ - _END_ arası gösteriliyor",
        infoEmpty: "Kayıt yok",
        infoFiltered: "(toplam _MAX_ kayıttan filtrelendi)",
        search: "Ara:",
        paginate: {
          first: "İlk",
          last: "Son",
          next: "Sonraki",
          previous: "Önceki",
        },
      },
      initComplete: function () {
        // Her sütun için footer'da arama kutuları oluştur
        this.api()
          .columns()
          .every(function () {
            let column = this;
            let title = column.footer().textContent;
            let input = document.createElement("input");
            input.placeholder = title;
            column.footer().replaceChildren(input);

            input.addEventListener("keyup", function () {
              if (column.search() !== input.value) {
                column.search(input.value).draw();
              }
            });
          });
      },
    });
    $('[data-toggle="tooltip"]').tooltip();
  });
</script>
