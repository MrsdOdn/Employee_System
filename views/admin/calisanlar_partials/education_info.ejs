<%- include("./modal/education_modal.ejs") %>
<div class="container mb-3">
  <table id="education_info" class="display" style="width: 100%">
    <thead>
      <tr>
        <th>Çalışan ID</th>
        <th>Ad-Soyad</th>
        <th>Kurum Türü</th>
        <th>Kurum Adı</th>
        <th>Bölüm</th>
        <th>Başlangıç Yılı</th>
        <th>Bitiş Yılı</th>
        <th>Derece</th>
        <th>İşlem</th>
      </tr>
    </thead>
    <tbody></tbody>
    <tfoot>
      <tr>
        <th>Çalışan ID</th>
        <th>Ad-Soyad</th>
        <th>Kurum Türü</th>
        <th>Kurum Adı</th>
        <th>Bölüm</th>
        <th>Başlangıç Yılı</th>
        <th>Bitiş Yılı</th>
        <th>Derece</th>
        <th>İşlem</th>
      </tr>
    </tfoot>
  </table>
</div>
<script>
  function ellipsis(text, maxLength) {
    if (text.length > maxLength) {
      return text.substring(0, maxLength) + "...";
    }
    return text;
  }

  function editEducation(apiUrl, userId) {
    console.log(apiUrl, userId);
    userid = userId;
    console.log(userid);

    $.ajax({
      url: apiUrl,
      method: "GET",
      success: function (data) {
        console.log(data);
        $("#modalInputInstitutionType").val(data.institution_type);
        $("#modalInputInstitutionName").val(data.institution_name);
        $("#modalInputDepartments").val(data.department);
        $("#modalInputStartYear").val(data.start_year);
        $("#modalInputEndYear").val(data.end_year);
        $("#modalInputDegree").val(data.degree);

        $("#editEducationInfoModal").modal("show");
      },
      error: function (err) {
        showToast("Eğitim bilgileri alınırken", "Bir hata oluştu");
        console.error("Eğitim bilgileri alınırken bir hata oluştu.", err);
      },
    });
  }

  $(document).ready(function () {
    var table = $("#education_info").DataTable({
      ajax: {
        url: "/admin/api/calisanlar/education",
        dataSrc: "",
      },
      columns: [
        { data: "employee_id" },
        {
          data: "first_name",
          render: function (data, type, row) {
            return data ? `${data} ${row.last_name || "N/A"}` : "N/A";
          },
        },
        {
          data: "institution_type",
          render: function (data) {
            return data || "N/A";
          },
        },
        {
          data: "institution_name",
          render: function (data) {
            return data || "N/A";
          },
        },
        {
          data: "department",
          render: function (data) {
            return data || "N/A";
          },
        },
        {
          data: "start_year",
          render: function (data) {
            return data || "N/A";
          },
        },
        {
          data: "end_year",
          render: function (data) {
            return data || "N/A";
          },
        },
        {
          data: "degree",
          render: function (data) {
            return data || "N/A";
          },
        },
        {
          data: "employee_id",
          render: function (data) {
            return `<a href="#" class="btn btn-warning btn-sm" onclick="editEducation('/admin/api/calisanlar/education/${data}', '${data}')">
                    <ion-icon name="create-outline" data-toggle="tooltip" title="DÜZENLE"></ion-icon></a>
                    <a href="#" class="btn btn-danger btn-sm"  onclick="confirmDelete('/admin/api/calisanlar/education/${data}', ${data},'#education_info')">
                    <ion-icon name="trash" data-toggle="tooltip" title="SİL"></ion-icon></a>`;
          },
        },
      ],
      dom: "Blfrtip",
      buttons: [
        {
          extend: "colvis",
          text: '<i class="fa fa-eye" data-toggle="tooltip" title="Kolonları Göster/Gizle"></i>',
        },
        {
          extend: "excelHtml5",
          text: '<i class="fa fa-file-excel-o" data-toggle="tooltip" data-original-title="Excel\'e Aktar"></i>',
          title: "Çalışanlar " + moment(new Date()).format("DD-MM-YYYY"),
          exportOptions: {
            columns: ":visible",
          },
        },
        {
          extend: "print",
          text: '<i class="fa fa-print" data-toggle="tooltip" data-original-title="Yazdır"></i>',
          title: "Çalışanlar " + moment(new Date()).format("DD-MM-YYYY"),
          exportOptions: {
            columns: ":visible",
          },
        },
      ],
      fixedColumns: {
        leftColumns: 1,
      },
      fixedHeader: true,
      scrollCollapse: true,
      searching: true,
      scrollX: true,
      lengthMenu: [
        [10, 25, 50, -1],
        [10, 25, 50, "All"],
      ],
      language: {
        lengthMenu: " _MENU_ Sayfa başı kayıt Sayısı",
        zeroRecords: "Kayıt bulunamadı",
        info: "_TOTAL_ kayıttan _START_ - _END_ arası gösteriliyor",
        infoEmpty: "Kayıt yok",
        infoFiltered: "(toplam _MAX_ kayıttan filtrelendi)",
        search: "Ara:",
        paginate: {
          first: "İlk",
          last: "Son",
          next: "Sonraki",
          previous: "Önceki",
        },
      },
      initComplete: function () {
        this.api()
          .columns()
          .every(function () {
            let column = this;
            let title = column.footer().textContent;

            let input = document.createElement("input");
            input.placeholder = title;
            column.footer().replaceChildren(input);

            input.addEventListener("keyup", () => {
              if (column.search() !== this.value) {
                column.search(input.value).draw();
              }
            });
          });
      },
    });
    $('[data-toggle="tooltip"]').tooltip();
  });
</script>
